version: '3.5'
services:
  api:
    container_name: instagram_api
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-dev
    ports:
    - "10000:3000"
    volumes:
    - .:/usr/src/app
    - /usr/src/app/node_modules
    env_file:
    - .env
    depends_on:
    - redis
    - mongo
    command: ["./docker/wait-for-mongo.sh", "mongo", "nodemon", "index.js"]
  redis:
    container_name: instagram_redis
    image: redis:5-alpine
    command: redis-server --requirepass 12345678
    ports:
    - "6379:6379"
  mongo:
    container_name: instagram_mongo
    image: mongo:4.0.4
    restart: always
    command: mongod --port 27017 --bind_ip_all
    ports:
    - "27017:27017"
    volumes:
    - /root/instagram/mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: sloth
      MONGO_INITDB_ROOT_PASSWORD: 12345678
  mongo-express:
    container_name: instagram_mongo_express
    image: mongo-express
    restart: always
    ports:
    - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: sloth
      ME_CONFIG_MONGODB_ADMINPASSWORD: 12345678
    depends_on:
    - mongo
volumes:
  mongo-data: